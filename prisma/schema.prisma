// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int       @id @default(autoincrement())
  companyId         Int
  name              String    @db.VarChar(50)
  email             String    @unique @db.VarChar(320)
  phoneNumber       String    @unique @db.VarChar(20)
  encryptedPassword String    @db.VarChar(100)
  role              USER_ROLE
  employeeNumber    String    @db.VarChar(50)
  imageUrl          String?   @db.VarChar(255)
  createdAt         DateTime  @default(now())

  company   Company    @relation(fields: [companyId], references: [id], onDelete: Cascade)
  contracts Contract[]
}

model Customer {
  id            Int       @id @default(autoincrement())
  companyId     Int
  name          String    @db.VarChar(50)
  email         String    @unique @db.VarChar(320)
  gender        String    @db.VarChar(50)
  phoneNumber   String    @unique @db.VarChar(20)
  ageGroup      AGE_GROUP
  region        REGION
  contractCount Int       @default(0) @db.Integer
  memo          String?
  createdAt     DateTime  @default(now())

  company   Company?   @relation(fields: [companyId], references: [id], onDelete: Cascade)
  contracts Contract[]
}

model Car {
  id                Int    @id @default(autoincrement())
  companyId         Int
  carNumber         String @unique
  manufacturer      String
  model             String
  type              String
  manufacturingYear Int
  mileage           Int
  price             Int
  accidentCount     Int
  explanation       String
  accidentDetails   String
  status            String

  company   Company    @relation(fields: [companyId], references: [id])
  contracts Contract[]

  @@map("Car")
}

model Contract {
  id             Int             @id @default(autoincrement())
  customerId     Int
  carId          Int
  userId         Int
  companyId      Int
  status         CONTRACT_STATUS
  contractPrice  Decimal         @db.Decimal(20, 2)
  resolutionDate DateTime?
  createdAt      DateTime        @default(now())

  customer          Customer           @relation(fields: [customerId], references: [id], onDelete: Cascade)
  car               Car                @relation(fields: [carId], references: [id], onDelete: Cascade)
  user              User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  contractDocuments ContractDocument[]
  meetings          Meeting[]
  Company           Company            @relation(fields: [companyId], references: [id], onDelete: Cascade)
}

model ContractDocument {
  id         Int    @id @default(autoincrement())
  fileName   String @db.VarChar(50)
  filePath   String @db.VarChar(255)
  fileSize   Int?   @db.Integer
  contractId Int

  contract Contract @relation(fields: [contractId], references: [id], onDelete: Cascade)
}

model Meeting {
  id         Int      @id @default(autoincrement())
  time       DateTime
  contract   Contract @relation(fields: [contractId], references: [id], onDelete: Cascade)
  contractId Int
}

model Company {
  id          Int        @id @default(autoincrement())
  companyName String     @unique @db.VarChar(50)
  companyCode String     @unique @db.VarChar(50)
  users       User[]
  cars        Car[]
  customers   Customer[]
  contracts   Contract[]
}

enum CONTRACT_STATUS {
  VEHICLE_CHECKING
  PRICE_CHECKING
  CONTRACT_PREPARING
  CONTRACT_SUCCESS
  CONTRACT_FAILED
}

enum CAR_STATUS {
  AVAILABLE
  PENDING
  SOLD
}

enum USER_ROLE {
  ADMIN
  OWNER
  EMPLOYEE
}

enum AGE_GROUP {
  AGE_10
  AGE_20
  AGE_30
  AGE_40
  AGE_50
  AGE_60
  AGE_70
  AGE_80
}

enum REGION {
  SEOUL
  GYEONGGI
  INCHEON
  GANGWON
  CHOUNGBUK
  CHOUNGNAM
  SEJONG
  DAJEON
  GYEONGBUK
  GYEONGNAM
  GWANGJU
  JEONBUK
  JEONNAM
  DAEGU
  ULSAN
  BUSAN
  JEJU
}
